  version: 0.2
  phases:
    install:
      commands:
        - echo "Isntalling docker.io if not present, and network utilities"
        - apt-get update -y
        - apt-get install -y iputils-ping dnsutils docker.io
    pre_build:
      commands:
        - echo "Logging in to Amazon ECR..."
        - ECR_REGION="eu-north-1"
        - AWS_ACCOUNT_ID="305362906248"
        - ECR_REPOSITORY_NAME="sofr-scraper"

        - ECR_REGISTRY_URL="${AWS_ACCOUNT_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com"
        
        - aws ecr get-login-password --region ${ECR_REGION} | docker login --username AWS --password-stdin ${ECR_REGISTRY_URL}
        
        - REPOSITORY_URI="${ECR_REGISTRY_URL}/${ECR_REPOSITORY_NAME}"
        - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
        - IMAGE_TAG=${IMAGE_TAG:-latest}
    build:
      commands:
        - echo "Build started on `date`"
        - echo "Building the Docker image..."
        - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
        - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest
    post_build:
      commands:
        - echo "Build completed on `date`"
        - echo "Pushing the Docker image to ECR..."
        - docker push $REPOSITORY_URI:$IMAGE_TAG
        - docker push $REPOSITORY_URI:latest
        - echo "Writing image definitions file..."
        - printf '[{"name":"sofr-scraper-container","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
  artifacts: 
    files:
      - imagedefinitions.json
        
